import{r}from"./chunk-D4RADZKF-BZ4imTJX.js";const c=[],t={autoConnect:!1,connecting:!1,connected:!1,disconnecting:!1,select(){e("call","select")},connect(){return Promise.reject(e("call","connect"))},disconnect(){return Promise.reject(e("call","disconnect"))},sendTransaction(){return Promise.reject(e("call","sendTransaction"))},signTransaction(){return Promise.reject(e("call","signTransaction"))},signAllTransactions(){return Promise.reject(e("call","signAllTransactions"))},signMessage(){return Promise.reject(e("call","signMessage"))},signIn(){return Promise.reject(e("call","signIn"))}};Object.defineProperty(t,"wallets",{get(){return e("read","wallets"),c}});Object.defineProperty(t,"wallet",{get(){return e("read","wallet"),null}});Object.defineProperty(t,"publicKey",{get(){return e("read","publicKey"),null}});function e(o,s){const n=new Error(`You have tried to ${o} "${s}" on a WalletContext without providing one. Make sure to render a WalletProvider as an ancestor of the component that uses WalletContext.`);return console.error(n),n}const a=r.createContext(t);function i(){return r.useContext(a)}export{a as W,i as u};
